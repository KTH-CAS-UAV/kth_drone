<launch>
	<!-- launch other launch files and eat lunch-->

	<!-- launch mavros px4 -->
		<include file="$(find mavros)/launch/px4.launch">
                    <arg name="fcu_url" value="/dev/serial/by-id/usb-3D_Robotics_PX4_FMU_v4.x_0-if00:921600"/>
                </include>

	<!-- launch mavros optitrack node ?? -->
		<include file="$(find mocap_optitrack)/launch/mocap.launch">				
		</include>

	<!-- launch state publisher of rviz drone model -->
		<include file="$(find drone_model)/launch/state_publisher.launch"/>

	<!-- launch openni stuff -->
	<include file="$(find openni2_launch)/launch/openni2.launch">
		<arg name="depth_registration" value="true"/>
		<!--param name="depth_registration" value="true"/-->
	</include>

	<!-- launch tf tree -->
	<include file="$(find drone_model)/launch/tf_tree.launch"/>

	<node pkg="tf" type="static_transform_publisher" name="tf_world_target" args="0.0 0 0.65 0 0 0 world target 10" />
	<node pkg="tf" type="static_transform_publisher" name="tf_world_slam_origin" args="0 0 0 0 0 0 world slam_origin 20" />

	<arg name="machine_name" default="$(optenv HOSTNAME localhost)"/>
	<group ns="$(arg machine_name)">
		<node name="cpu_monitor_$(arg machine_name)" pkg="system_monitor"
		      type="cpu_monitor.py" output="screen" respawn="true"/>
		<!--node name="hdd_monitor_$(arg machine_name)" pkg="system_monitor"
		      type="hdd_monitor.py" output="screen" respawn="true"/-->
		<node name="mem_monitor_$(arg machine_name)" pkg="system_monitor"
		      type="mem_monitor.py" output="screen" respawn="true"/>
		<!--node name="ntp_monitor_$(arg machine_name)" pkg="system_monitor"
		      type="ntp_monitor.py" output="screen" respawn="true"/-->
		<!--node name="net_monitor_$(arg machine_name)" pkg="system_monitor"
		      type="net_monitor.py" output="screen" respawn="true"/-->

		<rosparam command="load" file="$(find system_monitor)/config/system_monitor.yaml"/>
	</group>

</launch>
